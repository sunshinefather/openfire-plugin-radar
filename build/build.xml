<project name="openfire-plugins-radar" default="openfire-plugins" basedir=".">
	<property name="plugin.name" value="radar" />
	<property name="project.path" value="../" />
	<property name="build.jar" value="${project.path}/lib" />
	<property name="plugin.path" value="${project.path}/src/java" />
	<!-- java servlet相关文件编译jar存放位置 -->
	<property name="java.jar.dir" value="${project.path}/java-dist" />
	<!-- jsp servlet编译后jar存放位置 -->
	<property name="jsp.jar.dir" value="${project.path}/jsp-dist/lib" />
	<!-- 定义java servlet和jsp servlet的jar包名称 -->
	<property name="java.jar" value="${java.jar.dir}/plugin-${plugin.name}.jar" />
	<property name="jsp.jar" value="${jsp.jar.dir}/plugin-${plugin.name}-jspc.jar" />
	<!-- jsp servlet配置到web.xml中 -->
	<property name="plugin.web.xml" value="${project.path}/jsp-dist/web.xml" />
	
	<!-- 编译jsp 并生成相关java文件 -->
	<target name="jspc">
		<mkdir dir="${project.path}/jsp-dist/classes" />
		<mkdir dir="${project.path}/jsp-dist/lib" />
		<mkdir dir="${project.path}/jsp-dist/src" />
		<taskdef classname="org.apache.jasper.JspC" name="jasper2">
			<classpath id="jspc.classpath">
				<pathelement location="${java.home}/../lib/tools.jar" />
				<fileset dir="${build.jar}">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
		</taskdef>
		<jasper2  javaEncoding="UTF-8" validateXml="false" uriroot="${project.path}/web" outputDir="${project.path}/jsp-dist/src" package="com.radar.plugin.${plugin.name}" />
		<jasper2 validateXml="false" uriroot="${project.path}/web" outputDir="${project.path}/jsp-dist/src" package="com.radar.plugin.${plugin.name}" webXml="${plugin.web.xml}" />
	</target>
	
	<!-- 编译jsp 并打jar包 -->
	<target name="compile">
		<javac destdir="${project.path}/jsp-dist/classes" optimize="off" encoding="UTF-8" debug="on" failonerror="false" srcdir="${project.path}/jsp-dist/src" excludes="**/*.smap">
			<classpath>
				<pathelement location="${project.path}/jsp-dist/classes" />
				<fileset dir="${project.path}/jsp-dist/lib">
					<include name="*.jar" />
				</fileset>
				<pathelement location="${project.path}/classes" />
				<fileset dir="${project.path}/lib">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
			<include name="**" />
			<exclude name="tags/**" />
		</javac>
		<jar jarfile="${jsp.jar}" basedir="${project.path}/jsp-dist/classes" />
	</target>
	
	<!-- 生成可部署的插件包 -->
	<target name="plug-jar">
		<!-- 插件包相关lib、 web目录 -->
		<mkdir dir="${project.path}/${plugin.name}/lib" />
		<mkdir dir="${project.path}/${plugin.name}/web/WEB-INF" />
		<mkdir dir="${project.path}/${plugin.name}/classes"/>
		
		<!-- 复制jsp的jar和java servlet的相关jar包到插件包的lib目录下 -->
		<copy file="${jsp.jar}" todir="${project.path}/${plugin.name}/lib" />
		
		<!--复制相关jar到lib目录下-->
		<copy  todir="${project.path}/${plugin.name}/lib" >
			<fileset dir="${project.path}/lib/include" includes="**.jar" />
		</copy>
		
		<!--复制插件核心class文件等-->
		<copy  todir="${project.path}/${plugin.name}/classes" >
			<fileset dir="${project.path}/classes" includes="**/*.*" />
		</copy>
		
		<!-- 将相关的图片、帮助文档、修改日志等文件复制到插件目录下 -->
		<copy todir="${project.path}/${plugin.name}">
			<fileset dir="${project.path}" includes="*.gif" />
			<fileset dir="${project.path}" includes="*.html" />
			<fileset dir="${project.path}" includes="*.xml" />
		</copy>
		
		<copy todir="${project.path}/${plugin.name}/web">
			<fileset dir="${project.path}/web">
				<include name="*" />
				<include name="**/*.*" />
				<exclude name="**/*.xml" />
				<exclude name="**/*.jsp" />
			</fileset>
		</copy>
		
		<!-- jsp servlet的web复制到插件目录下 -->
		<copy file="${plugin.web.xml}" todir="${project.path}/${plugin.name}/web/WEB-INF" />
		<copy todir="${project.path}/${plugin.name}/web">
			<fileset dir="${project.path}/web" includes="**/*.xml" />
		</copy>
		
		<!-- 将国际化相关资源文件复制到插件目录下          <copy file="${project.path}/bin/i18n" todir="${project.path}/${plugin.name}"/>         -->
		<!-- 产生可部署插件包 -->
		<jar jarfile="${project.path}/out/${plugin.name}.jar">
			<fileset dir="${project.path}/${plugin.name}" includes="**/**" />
		</jar>
	</target>
	<!-- 生成没有Web资源的可部署插件包 -->
	<target name="java-plug-jar">
		<!-- 插件插件包相关lib、 web目录 -->
		<mkdir dir="${project.path}/${plugin.name}/lib" />
		<!-- 复制java servlet的相关jar包到插件包的lib目录下 -->
		<copy file="${java.jar}" todir="${project.path}/${plugin.name}/lib" />
		<!-- 将相关的图片、帮助文档、修改日志等文件复制到插件目录下 -->
		<copy todir="${project.path}/${plugin.name}">
			<fileset dir="${plugin.path}" includes="*.*" />
		</copy>
		<!-- 产生可部署插件包 -->
		<jar jarfile="${project.path}/out/${plugin.name}.jar">
			<fileset dir="${project.path}/${plugin.name}" includes="**/**" />
		</jar>
	</target>
	<!-- 清理生成的文件 -->
	<target name="clean">
		<delete file="${project.path}/${plugin.name}.jar" />
		<delete dir="${project.path}/${plugin.name}" />
		<delete dir="${project.path}/jsp-dist" />
		<delete dir="${project.path}/java-dist" />
		<delete dir="${project.path}/out" />
	</target>
	<target name="all" depends="clean,jspc,compile,clean" />
	<target name="openfire-plugin" depends="jspc" />
	<target name="openfire-plugins" depends="all,plug-jar" />
	<target name="openfire-plugin-java" depends="clean,java-plug-jar" />
</project>